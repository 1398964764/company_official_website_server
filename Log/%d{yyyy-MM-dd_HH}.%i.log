18:00:02.751 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:07.762 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=1, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:12.765 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=2, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:17.767 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=3, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:22.770 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=4, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:27.777 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=5, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:32.783 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=6, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:37.791 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=7, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:42.795 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=8, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:47.799 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=9, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:52.805 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=10, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:00:57.819 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=11, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:02.824 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=12, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:07.829 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=13, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:12.835 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=14, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:17.841 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=15, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:22.845 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=16, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:28.082 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=17, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:33.149 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=18, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:35.179 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:35.181 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:01:35.217 [http-nio-8088-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:01:35.627 [http-nio-8088-exec-1] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:01:36.011 [http-nio-8088-exec-1] ERROR c.c.exception.GlobalExceptionHandler - 系统异常：
org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:347)
	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:750)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:677)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:382)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:360)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:97)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:90)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:633)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:119)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:67)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:38)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:225)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:300)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.cows.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.IOException: Broken pipe
	at java.base/sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:62)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:132)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:53)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:532)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:118)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1381)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:589)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:533)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:540)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:73)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:193)
	at org.apache.coyote.Response.doWrite(Response.java:616)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:334)
	... 95 common frames omitted
18:01:36.116 [http-nio-8088-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.cows.exception.GlobalExceptionHandler#handleUnexpectedServer(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class com.cows.commons.api.BaseResponse] with preset Content-Type 'image/jpeg'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:194)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:413)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.cows.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
18:01:36.132 [http-nio-8088-exec-1] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:36.163 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request end
18:01:36.163 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:38.161 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=19, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:41.508 [http-nio-8088-exec-2] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:41.510 [http-nio-8088-exec-2] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:01:41.522 [http-nio-8088-exec-3] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:41.522 [http-nio-8088-exec-3] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:01:41.534 [http-nio-8088-exec-2] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:01:41.539 [http-nio-8088-exec-3] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:01:41.550 [http-nio-8088-exec-3] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:41.550 [http-nio-8088-exec-2] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:41.550 [http-nio-8088-exec-2] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:41.550 [http-nio-8088-exec-3] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:41.551 [http-nio-8088-exec-2] INFO  c.c.l.MyServletRequestListener - request end
18:01:41.551 [http-nio-8088-exec-2] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:41.551 [http-nio-8088-exec-3] INFO  c.c.l.MyServletRequestListener - request end
18:01:41.557 [http-nio-8088-exec-3] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:41.631 [http-nio-8088-exec-5] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:01:41.631 [http-nio-8088-exec-6] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:01:41.632 [http-nio-8088-exec-4] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:01:41.632 [http-nio-8088-exec-5] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/productCategories/getAllProductCategories
18:01:41.632 [http-nio-8088-exec-6] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/brands/getAllBrands
18:01:41.632 [http-nio-8088-exec-4] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/products/getProductsPaged
18:01:43.016 [http-nio-8088-exec-5] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllProductCategories，在该方法执行之前执行====
18:01:43.032 [http-nio-8088-exec-6] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.032 [http-nio-8088-exec-4] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.032 [http-nio-8088-exec-4] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:43.032 [http-nio-8088-exec-6] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:43.047 [http-nio-8088-exec-8] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:43.048 [http-nio-8088-exec-8] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/login
18:01:43.048 [http-nio-8088-exec-7] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:43.049 [http-nio-8088-exec-7] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/login
18:01:43.073 [http-nio-8088-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:01:43.079 [http-nio-8088-exec-7] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.079 [http-nio-8088-exec-8] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.080 [http-nio-8088-exec-8] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:43.080 [http-nio-8088-exec-7] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:43.100 [http-nio-8088-exec-9] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:43.102 [http-nio-8088-exec-9] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/login
18:01:43.103 [http-nio-8088-exec-10] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:43.105 [http-nio-8088-exec-10] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/login
18:01:43.112 [http-nio-8088-exec-10] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：login，在该方法执行之前执行====
18:01:43.116 [http-nio-8088-exec-10] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:43.123 [http-nio-8088-exec-9] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：login，在该方法执行之前执行====
18:01:43.124 [http-nio-8088-exec-9] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:43.178 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=20, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:43.721 [http-nio-8088-exec-9] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:43.721 [http-nio-8088-exec-9] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.721 [http-nio-8088-exec-9] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:43.746 [http-nio-8088-exec-10] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:43.750 [http-nio-8088-exec-10] INFO  c.c.l.MyServletRequestListener - request end
18:01:43.750 [http-nio-8088-exec-10] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:44.462 [http-nio-8088-exec-5] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@640ad1e7
18:01:44.465 [http-nio-8088-exec-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:01:44.708 [http-nio-8088-exec-5] INFO  c.c.c.c.ProductCategoryController - 获取所有商品分类信息: [ProductCategory(id=1, name=分类1, description=这是一个示例分类1的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=4, name=分类4, description=这是一个示例分类4的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=5, name=分类5, description=这是一个示例分类5的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=6, name=分类666, description=这是一个示例分类6666的描述。, updateTime=2024-07-02 09:59:05, createTime=2024-07-02 09:59:05, isEnabled=false, isDeleted=false), ProductCategory(id=7, name=分类7, description=这是一个示例分类7的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=true, isDeleted=false), ProductCategory(id=8, name=分类8, description=这是一个示例分类8的描述。, updateTime=2024-07-02 09:57:31, createTime=2024-07-02 09:57:31, isEnabled=true, isDeleted=false)]
18:01:44.838 [http-nio-8088-exec-5] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:44.838 [http-nio-8088-exec-5] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:44.839 [http-nio-8088-exec-5] INFO  c.c.l.MyServletRequestListener - request end
18:01:44.839 [http-nio-8088-exec-5] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:48.180 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=21, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:53.182 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=22, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:01:55.151 [http-nio-8088-exec-11] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:01:55.305 [http-nio-8088-exec-11] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/admins/login
18:01:55.349 [http-nio-8088-exec-11] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：login，在该方法执行之前执行====
18:01:55.504 [http-nio-8088-exec-11] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:55.505 [http-nio-8088-exec-11] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:55.505 [http-nio-8088-exec-11] INFO  c.c.l.MyServletRequestListener - request end
18:01:55.505 [http-nio-8088-exec-11] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:55.787 [http-nio-8088-exec-12] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:55.788 [http-nio-8088-exec-12] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:01:55.793 [http-nio-8088-exec-12] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:01:55.798 [http-nio-8088-exec-12] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:55.799 [http-nio-8088-exec-12] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:55.799 [http-nio-8088-exec-12] INFO  c.c.l.MyServletRequestListener - request end
18:01:55.799 [http-nio-8088-exec-12] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:55.822 [http-nio-8088-exec-13] INFO  c.c.l.MyServletRequestListener - session id为：null
18:01:55.828 [http-nio-8088-exec-14] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:01:55.836 [http-nio-8088-exec-13] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:01:55.836 [http-nio-8088-exec-14] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/basicInformation/getAllBasicInformation
18:01:55.845 [http-nio-8088-exec-13] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:01:55.851 [http-nio-8088-exec-13] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:55.851 [http-nio-8088-exec-13] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:55.851 [http-nio-8088-exec-13] INFO  c.c.l.MyServletRequestListener - request end
18:01:55.852 [http-nio-8088-exec-13] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:55.854 [http-nio-8088-exec-14] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllBasicInformation，在该方法执行之前执行====
18:01:55.878 [http-nio-8088-exec-14] INFO  c.c.c.a.BasicInformationController - 获取所有基本信息: [BasicInformation(id=1, homeTitle=阿达阿达是的 , homeDescription=阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿达阿达是的 阿斯达as啊, phone=18859942595, email=429573928@qq.com, address=福建省泉州市丰泽区泉秀街道泉兴街泉秀新村12栋203室, weChatImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240905155137_智慧其心公众号二维码.jpg, icp=ICP12345678, beianImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240905155145_智慧其心logo.png, publicSecurity=8888888888, copyright=© 2024 泉州姚师傅整体家居有限公司, isDeleted=false, isEnable=false)]
18:01:55.910 [http-nio-8088-exec-14] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:01:55.911 [http-nio-8088-exec-14] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:01:55.919 [http-nio-8088-exec-14] INFO  c.c.l.MyServletRequestListener - request end
18:01:55.919 [http-nio-8088-exec-14] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:01:58.187 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=23, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:03.195 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=24, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:08.200 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=25, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:08.422 [http-nio-8088-exec-15] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:08.422 [http-nio-8088-exec-15] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/products/getProductsPaged
18:02:08.432 [http-nio-8088-exec-16] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:08.432 [http-nio-8088-exec-17] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:08.432 [http-nio-8088-exec-16] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/productCategories/getAllProductCategories
18:02:08.432 [http-nio-8088-exec-17] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/brands/getAllBrands
18:02:08.433 [http-nio-8088-exec-15] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getProductsPaged，在该方法执行之前执行====
18:02:08.438 [http-nio-8088-exec-16] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllProductCategories，在该方法执行之前执行====
18:02:08.441 [http-nio-8088-exec-17] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllBrands，在该方法执行之前执行====
18:02:08.505 [http-nio-8088-exec-16] INFO  c.c.c.c.ProductCategoryController - 获取所有商品分类信息: [ProductCategory(id=1, name=分类1, description=这是一个示例分类1的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=4, name=分类4, description=这是一个示例分类4的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=5, name=分类5, description=这是一个示例分类5的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=false, isDeleted=false), ProductCategory(id=6, name=分类666, description=这是一个示例分类6666的描述。, updateTime=2024-07-02 09:59:05, createTime=2024-07-02 09:59:05, isEnabled=false, isDeleted=false), ProductCategory(id=7, name=分类7, description=这是一个示例分类7的描述。, updateTime=2024-07-02 09:52:29, createTime=2024-07-02 09:52:29, isEnabled=true, isDeleted=false), ProductCategory(id=8, name=分类8, description=这是一个示例分类8的描述。, updateTime=2024-07-02 09:57:31, createTime=2024-07-02 09:57:31, isEnabled=true, isDeleted=false)]
18:02:08.508 [http-nio-8088-exec-16] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.508 [http-nio-8088-exec-16] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.509 [http-nio-8088-exec-16] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.509 [http-nio-8088-exec-16] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.532 [http-nio-8088-exec-17] INFO  c.c.controller.admin.BrandController - 获取所有品牌信息成功
18:02:08.540 [http-nio-8088-exec-17] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.541 [http-nio-8088-exec-17] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.542 [http-nio-8088-exec-17] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.543 [http-nio-8088-exec-17] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.614 [http-nio-8088-exec-15] INFO  c.c.c.common.ProductController - 分页查询商品: {total=15, products=[Product(id=1, name=美大光华标准集成灶, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg], description=美大光华标准集成灶 很好用。。。。。。。。。。。。1111, salePrice=1000.0, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=1, updateTime=2024-07-14 13:36:15, createTime=2024-07-02 09:52:13, isAvailable=false, isDeleted=false), Product(id=2, name=美大M908标准, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=美大M908标准 很好用。。。。。。。。。。。。, salePrice=992.99, costPrice=592.99, stockQuantity=1002, brand=示例品牌2, categoryId=2, updateTime=2024-07-14 13:35:56, createTime=2024-07-02 09:52:13, isAvailable=false, isDeleted=false), Product(id=3, name=美大M902, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164308_美大M902.png, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述333。, salePrice=993.99, costPrice=593.99, stockQuantity=1002, brand=示例品牌3, categoryId=3, updateTime=2024-07-14 13:35:56, createTime=2024-07-02 10:03:15, isAvailable=false, isDeleted=false), Product(id=5, name=美大M908, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164321_美大M908.png, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:35:56, createTime=2024-07-02 09:59:58, isAvailable=true, isDeleted=false), Product(id=6, name=美大风尚标准库集成灶, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:35:56, createTime=2024-07-02 10:00:45, isAvailable=true, isDeleted=false), Product(id=7, name=美大风尚标准库集成灶, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:35:56, createTime=2024-07-02 10:00:45, isAvailable=true, isDeleted=false), Product(id=10, name=示例商品8, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:36:04, createTime=2024-07-13 15:51:13, isAvailable=true, isDeleted=false), Product(id=11, name=示例商品9, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:36:04, createTime=2024-07-13 15:51:18, isAvailable=true, isDeleted=false), Product(id=12, name=示例商品10, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:36:04, createTime=2024-07-13 15:51:21, isAvailable=true, isDeleted=false), Product(id=13, name=示例商品11, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:36:04, createTime=2024-07-13 15:51:25, isAvailable=true, isDeleted=false)]}
18:02:08.644 [http-nio-8088-exec-15] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.645 [http-nio-8088-exec-15] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.645 [http-nio-8088-exec-15] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.645 [http-nio-8088-exec-15] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.688 [http-nio-8088-exec-18] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.688 [http-nio-8088-exec-18] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.688 [http-nio-8088-exec-20] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.689 [http-nio-8088-exec-20] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.689 [http-nio-8088-exec-19] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.689 [http-nio-8088-exec-19] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.689 [http-nio-8088-exec-22] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.690 [http-nio-8088-exec-22] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.692 [http-nio-8088-exec-20] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.692 [http-nio-8088-exec-18] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.692 [http-nio-8088-exec-19] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.691 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.692 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.692 [http-nio-8088-exec-22] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.694 [http-nio-8088-exec-19] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.694 [http-nio-8088-exec-20] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.694 [http-nio-8088-exec-20] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.695 [http-nio-8088-exec-18] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.695 [http-nio-8088-exec-18] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.695 [http-nio-8088-exec-18] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.695 [http-nio-8088-exec-18] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.695 [http-nio-8088-exec-20] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.695 [http-nio-8088-exec-20] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.694 [http-nio-8088-exec-19] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.696 [http-nio-8088-exec-22] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.697 [http-nio-8088-exec-22] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.696 [http-nio-8088-exec-19] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.698 [http-nio-8088-exec-19] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.698 [http-nio-8088-exec-22] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.699 [http-nio-8088-exec-22] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.700 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.707 [http-nio-8088-exec-23] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.707 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.707 [http-nio-8088-exec-23] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.708 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.708 [http-nio-8088-exec-24] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.708 [http-nio-8088-exec-24] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.708 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.708 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.710 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.711 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.711 [http-nio-8088-exec-25] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.711 [http-nio-8088-exec-25] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.714 [http-nio-8088-exec-24] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.714 [http-nio-8088-exec-23] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.715 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.715 [http-nio-8088-exec-25] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.715 [http-nio-8088-exec-26] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:08.715 [http-nio-8088-exec-24] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.715 [http-nio-8088-exec-26] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:08.716 [http-nio-8088-exec-23] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.716 [http-nio-8088-exec-24] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.716 [http-nio-8088-exec-24] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.716 [http-nio-8088-exec-24] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.717 [http-nio-8088-exec-25] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.717 [http-nio-8088-exec-25] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.718 [http-nio-8088-exec-25] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.718 [http-nio-8088-exec-25] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.716 [http-nio-8088-exec-23] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.718 [http-nio-8088-exec-23] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.718 [http-nio-8088-exec-23] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.718 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.719 [http-nio-8088-exec-21] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.722 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.723 [http-nio-8088-exec-21] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:08.723 [http-nio-8088-exec-26] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:08.725 [http-nio-8088-exec-26] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:08.726 [http-nio-8088-exec-26] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:08.726 [http-nio-8088-exec-26] INFO  c.c.l.MyServletRequestListener - request end
18:02:08.726 [http-nio-8088-exec-26] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:13.205 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=26, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:18.212 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=27, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:20.227 [http-nio-8088-exec-29] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.227 [http-nio-8088-exec-28] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.227 [http-nio-8088-exec-27] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.227 [http-nio-8088-exec-29] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.227 [http-nio-8088-exec-28] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.227 [http-nio-8088-exec-27] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.231 [http-nio-8088-exec-29] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.233 [http-nio-8088-exec-28] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.231 [http-nio-8088-exec-27] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.237 [http-nio-8088-exec-28] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.238 [http-nio-8088-exec-28] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.238 [http-nio-8088-exec-28] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.238 [http-nio-8088-exec-28] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:20.236 [http-nio-8088-exec-29] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.239 [http-nio-8088-exec-29] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.239 [http-nio-8088-exec-27] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.240 [http-nio-8088-exec-27] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.241 [http-nio-8088-exec-27] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.242 [http-nio-8088-exec-27] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:20.240 [http-nio-8088-exec-29] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.243 [http-nio-8088-exec-29] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:20.263 [http-nio-8088-exec-30] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.264 [http-nio-8088-exec-30] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.266 [http-nio-8088-exec-30] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.269 [http-nio-8088-exec-30] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.269 [http-nio-8088-exec-30] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.269 [http-nio-8088-exec-30] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.269 [http-nio-8088-exec-30] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:20.277 [http-nio-8088-exec-32] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.278 [http-nio-8088-exec-32] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.278 [http-nio-8088-exec-31] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:20.278 [http-nio-8088-exec-31] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:20.282 [http-nio-8088-exec-32] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.282 [http-nio-8088-exec-31] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:20.284 [http-nio-8088-exec-32] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.284 [http-nio-8088-exec-31] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:20.289 [http-nio-8088-exec-32] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.289 [http-nio-8088-exec-31] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:20.290 [http-nio-8088-exec-32] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.290 [http-nio-8088-exec-31] INFO  c.c.l.MyServletRequestListener - request end
18:02:20.290 [http-nio-8088-exec-32] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:20.290 [http-nio-8088-exec-31] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:23.218 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=28, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:28.223 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=29, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:30.767 [http-nio-8088-exec-33] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:30.785 [http-nio-8088-exec-34] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:30.790 [http-nio-8088-exec-34] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:30.789 [http-nio-8088-exec-33] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:30.799 [http-nio-8088-exec-34] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:30.802 [http-nio-8088-exec-33] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:30.803 [http-nio-8088-exec-34] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.804 [http-nio-8088-exec-34] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.804 [http-nio-8088-exec-34] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.804 [http-nio-8088-exec-34] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.805 [http-nio-8088-exec-33] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.805 [http-nio-8088-exec-33] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.805 [http-nio-8088-exec-33] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.806 [http-nio-8088-exec-33] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.809 [http-nio-8088-exec-35] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:30.809 [http-nio-8088-exec-35] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/carousels/getAllCarousels
18:02:30.809 [http-nio-8088-exec-36] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:30.809 [http-nio-8088-exec-36] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/products/getAllProducts
18:02:30.815 [http-nio-8088-exec-35] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllCarousels，在该方法执行之前执行====
18:02:30.818 [http-nio-8088-exec-36] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getAllProducts，在该方法执行之前执行====
18:02:30.932 [http-nio-8088-exec-35] INFO  c.c.c.mobile.CarouselController - 获取所有轮播图信息: [Carousel(id=1, title=3, order=1, imageUrl=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240906113623_88888888_20240701154410_1890x600-1.jpg, redirectUrl=https://example.com, isEnabled=true, createTime=2024-06-29 15:27:04, updateTime=2024-09-06 03:36:26, isDeleted=false), Carousel(id=5, title=1, order=2, imageUrl=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240906113550_88888888_20240701154423_1890x600-2.jpg, redirectUrl=, isEnabled=false, createTime=2024-09-06 03:21:35, updateTime=2024-09-06 03:36:08, isDeleted=false), Carousel(id=2, title=2, order=3, imageUrl=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240906113559_88888888_20240701154435_1890x600-3.jpg, redirectUrl=https://example.com, isEnabled=false, createTime=2024-09-05 13:08:31, updateTime=2024-09-06 03:36:32, isDeleted=false)]
18:02:30.943 [http-nio-8088-exec-36] INFO  c.c.c.common.ProductController - 获取所有商品信息成功
18:02:30.947 [http-nio-8088-exec-35] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.948 [http-nio-8088-exec-35] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.948 [http-nio-8088-exec-35] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.948 [http-nio-8088-exec-35] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.958 [http-nio-8088-exec-36] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.960 [http-nio-8088-exec-36] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.961 [http-nio-8088-exec-36] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.961 [http-nio-8088-exec-36] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.972 [http-nio-8088-exec-37] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:30.973 [http-nio-8088-exec-37] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:30.972 [http-nio-8088-exec-38] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:30.973 [http-nio-8088-exec-38] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:30.972 [http-nio-8088-exec-39] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:30.974 [http-nio-8088-exec-39] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:30.977 [http-nio-8088-exec-37] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:30.978 [http-nio-8088-exec-39] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:30.979 [http-nio-8088-exec-38] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:30.986 [http-nio-8088-exec-38] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.988 [http-nio-8088-exec-39] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.986 [http-nio-8088-exec-37] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:30.989 [http-nio-8088-exec-39] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.993 [http-nio-8088-exec-39] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.993 [http-nio-8088-exec-39] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.988 [http-nio-8088-exec-38] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.993 [http-nio-8088-exec-37] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:30.995 [http-nio-8088-exec-37] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.995 [http-nio-8088-exec-37] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:30.995 [http-nio-8088-exec-38] INFO  c.c.l.MyServletRequestListener - request end
18:02:30.999 [http-nio-8088-exec-38] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.028 [http-nio-8088-exec-41] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.028 [http-nio-8088-exec-40] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.028 [http-nio-8088-exec-40] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.028 [http-nio-8088-exec-41] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.034 [http-nio-8088-exec-40] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.034 [http-nio-8088-exec-41] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.036 [http-nio-8088-exec-41] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.036 [http-nio-8088-exec-41] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.036 [http-nio-8088-exec-41] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.036 [http-nio-8088-exec-40] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.036 [http-nio-8088-exec-41] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.036 [http-nio-8088-exec-40] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.037 [http-nio-8088-exec-40] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.037 [http-nio-8088-exec-40] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.051 [http-nio-8088-exec-42] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.051 [http-nio-8088-exec-42] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.056 [http-nio-8088-exec-43] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.056 [http-nio-8088-exec-43] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.057 [http-nio-8088-exec-42] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.059 [http-nio-8088-exec-43] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.059 [http-nio-8088-exec-42] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.059 [http-nio-8088-exec-42] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.060 [http-nio-8088-exec-42] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.060 [http-nio-8088-exec-42] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.061 [http-nio-8088-exec-43] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.062 [http-nio-8088-exec-43] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.062 [http-nio-8088-exec-43] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.062 [http-nio-8088-exec-43] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.069 [http-nio-8088-exec-44] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.070 [http-nio-8088-exec-44] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.074 [http-nio-8088-exec-44] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.076 [http-nio-8088-exec-44] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.076 [http-nio-8088-exec-44] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.077 [http-nio-8088-exec-44] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.077 [http-nio-8088-exec-44] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.087 [http-nio-8088-exec-45] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.087 [http-nio-8088-exec-45] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.090 [http-nio-8088-exec-45] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.093 [http-nio-8088-exec-46] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.093 [http-nio-8088-exec-46] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.097 [http-nio-8088-exec-46] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.099 [http-nio-8088-exec-46] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.099 [http-nio-8088-exec-46] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.099 [http-nio-8088-exec-46] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.099 [http-nio-8088-exec-46] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.104 [http-nio-8088-exec-45] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.104 [http-nio-8088-exec-45] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.105 [http-nio-8088-exec-45] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.105 [http-nio-8088-exec-45] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.118 [http-nio-8088-exec-48] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.118 [http-nio-8088-exec-47] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.118 [http-nio-8088-exec-48] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.118 [http-nio-8088-exec-47] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.119 [http-nio-8088-exec-49] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:31.119 [http-nio-8088-exec-49] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:31.121 [http-nio-8088-exec-48] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.121 [http-nio-8088-exec-47] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.121 [http-nio-8088-exec-49] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:31.126 [http-nio-8088-exec-48] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.127 [http-nio-8088-exec-48] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.144 [http-nio-8088-exec-48] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.146 [http-nio-8088-exec-48] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.127 [http-nio-8088-exec-47] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.163 [http-nio-8088-exec-47] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.164 [http-nio-8088-exec-47] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.171 [http-nio-8088-exec-47] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:31.127 [http-nio-8088-exec-49] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:31.176 [http-nio-8088-exec-49] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:31.176 [http-nio-8088-exec-49] INFO  c.c.l.MyServletRequestListener - request end
18:02:31.176 [http-nio-8088-exec-49] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:33.229 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=30, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:34.382 [http-nio-8088-exec-50] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:34.383 [http-nio-8088-exec-50] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:34.453 [http-nio-8088-exec-50] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:34.456 [http-nio-8088-exec-51] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:34.457 [http-nio-8088-exec-51] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:34.457 [http-nio-8088-exec-50] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:34.457 [http-nio-8088-exec-50] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:34.457 [http-nio-8088-exec-50] INFO  c.c.l.MyServletRequestListener - request end
18:02:34.457 [http-nio-8088-exec-50] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:34.459 [http-nio-8088-exec-51] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:34.460 [http-nio-8088-exec-52] INFO  c.c.l.MyServletRequestListener - session id为：2507D09BFCCB3FA28827AD521727A746
18:02:34.460 [http-nio-8088-exec-52] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/products/getProductById/1
18:02:34.461 [http-nio-8088-exec-51] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:34.461 [http-nio-8088-exec-51] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:34.461 [http-nio-8088-exec-51] INFO  c.c.l.MyServletRequestListener - request end
18:02:34.461 [http-nio-8088-exec-51] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:34.568 [http-nio-8088-exec-52] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getProductById，在该方法执行之前执行====
18:02:34.653 [http-nio-8088-exec-52] INFO  c.c.c.common.ProductController - 通过ID获取商品信息: Product(id=1, name=美大光华标准集成灶, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg], description=美大光华标准集成灶 很好用。。。。。。。。。。。。1111, salePrice=1000.0, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=1, updateTime=2024-07-14 13:36:15, createTime=2024-07-02 09:52:13, isAvailable=false, isDeleted=false)
18:02:34.656 [http-nio-8088-exec-52] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:34.656 [http-nio-8088-exec-52] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:34.657 [http-nio-8088-exec-52] INFO  c.c.l.MyServletRequestListener - request end
18:02:34.657 [http-nio-8088-exec-52] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:34.665 [http-nio-8088-exec-53] INFO  c.c.l.MyServletRequestListener - session id为：null
18:02:34.665 [http-nio-8088-exec-53] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/getLatestImage
18:02:34.667 [http-nio-8088-exec-53] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getLatestImage，在该方法执行之前执行====
18:02:34.668 [http-nio-8088-exec-53] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:02:34.668 [http-nio-8088-exec-53] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:02:34.669 [http-nio-8088-exec-53] INFO  c.c.l.MyServletRequestListener - request end
18:02:34.669 [http-nio-8088-exec-53] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:02:38.237 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=31, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:43.239 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=32, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:48.256 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=33, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:53.263 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=34, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:02:58.269 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=35, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:03.275 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=36, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:08.280 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=37, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:13.282 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=38, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:18.286 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=39, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:23.290 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=40, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:03:26.951 [Thread-68] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8088"]
18:03:26.952 [Thread-68] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
18:03:26.953 [Thread-68] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
18:03:26.961 [Thread-68] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [BC Entropy Daemon] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/java.lang.Thread.sleep(Native Method)
 app//org.bouncycastle.crypto.EntropyDaemon.run(Unknown Source)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
18:03:26.963 [Thread-68] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
18:03:26.966 [Thread-68] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8088"]
18:03:26.988 [Thread-68] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8088"]
18:03:27.002 [Thread-68] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:03:27.015 [Thread-68] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:03:27.438 [restartedMain] INFO  com.cows.Application - Starting Application using Java 17.0.1 with PID 23539 (/Users/liyinchi/workspace/java/company_official_website_server/target/classes started by liyinchi in /Users/liyinchi/workspace/java/company_official_website_server)
18:03:27.438 [restartedMain] INFO  com.cows.Application - The following 1 profile is active: "prod"
18:03:28.436 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
18:03:28.452 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:03:28.452 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
18:03:28.477 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:03:28.661 [restartedMain] ERROR c.b.m.core.MybatisConfiguration - mapper[com.cows.mapper.AdminMapper.findAdminByUserName] is ignored, because it exists, maybe from xml file
18:03:29.055 [restartedMain] INFO  com.cows.service.RedisService - redis port: 6379
18:03:29.900 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8088"]
18:03:29.917 [restartedMain] INFO  com.cows.Application - Started Application in 2.54 seconds (process running for 617.879)
18:03:34.399 [Thread-73] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8088"]
18:03:34.399 [Thread-73] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
18:03:34.401 [Thread-73] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8088"]
18:03:34.407 [Thread-73] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8088"]
18:03:34.557 [restartedMain] INFO  com.cows.Application - Starting Application using Java 17.0.1 with PID 23539 (/Users/liyinchi/workspace/java/company_official_website_server/target/classes started by liyinchi in /Users/liyinchi/workspace/java/company_official_website_server)
18:03:34.557 [restartedMain] INFO  com.cows.Application - The following 1 profile is active: "prod"
18:03:35.080 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
18:03:35.080 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:03:35.080 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
18:03:35.107 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:03:35.250 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController': Unsatisfied dependency expressed through field 'adminService': Error creating bean with name 'adminServiceImpl': Unsatisfied dependency expressed through field 'adminMapper': Error creating bean with name 'adminMapper' defined in file [/Users/liyinchi/workspace/java/company_official_website_server/target/classes/com/cows/mapper/AdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory': Error creating bean with name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration': Failed to instantiate [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration]: Constructor threw exception
18:03:35.250 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
18:03:35.286 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.cows.handler.JsonTypeHandler required a bean of type 'java.lang.Class' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'java.lang.Class' in your configuration.

18:03:40.854 [restartedMain] INFO  com.cows.Application - Starting Application using Java 17.0.1 with PID 23539 (/Users/liyinchi/workspace/java/company_official_website_server/target/classes started by liyinchi in /Users/liyinchi/workspace/java/company_official_website_server)
18:03:40.854 [restartedMain] INFO  com.cows.Application - The following 1 profile is active: "prod"
18:03:41.293 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
18:03:41.293 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:03:41.293 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
18:03:41.324 [restartedMain] INFO  o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:03:41.485 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController': Unsatisfied dependency expressed through field 'adminService': Error creating bean with name 'adminServiceImpl': Unsatisfied dependency expressed through field 'adminMapper': Error creating bean with name 'adminMapper' defined in file [/Users/liyinchi/workspace/java/company_official_website_server/target/classes/com/cows/mapper/AdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory': Error creating bean with name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration': Failed to instantiate [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration]: Constructor threw exception
18:03:41.486 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
18:03:41.495 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.cows.handler.JsonTypeHandler required a bean of type 'java.lang.Class' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'java.lang.Class' in your configuration.

18:03:54.171 [restartedMain] INFO  com.cows.Application - Starting Application using Java 17.0.1 with PID 23539 (/Users/liyinchi/workspace/java/company_official_website_server/target/classes started by liyinchi in /Users/liyinchi/workspace/java/company_official_website_server)
18:03:54.172 [restartedMain] INFO  com.cows.Application - The following 1 profile is active: "prod"
18:03:54.632 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
18:03:54.632 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:03:54.632 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
18:03:54.655 [restartedMain] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:03:54.813 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController': Unsatisfied dependency expressed through field 'adminService': Error creating bean with name 'adminServiceImpl': Unsatisfied dependency expressed through field 'adminMapper': Error creating bean with name 'adminMapper' defined in file [/Users/liyinchi/workspace/java/company_official_website_server/target/classes/com/cows/mapper/AdminMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory': Error creating bean with name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration': Failed to instantiate [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration]: Constructor threw exception
18:03:54.813 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
18:03:54.821 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.cows.handler.JsonTypeHandler required a bean of type 'java.lang.Class' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'java.lang.Class' in your configuration.

18:04:12.636 [restartedMain] INFO  com.cows.Application - Starting Application using Java 17.0.1 with PID 23539 (/Users/liyinchi/workspace/java/company_official_website_server/target/classes started by liyinchi in /Users/liyinchi/workspace/java/company_official_website_server)
18:04:12.641 [restartedMain] INFO  com.cows.Application - The following 1 profile is active: "prod"
18:04:13.464 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
18:04:13.464 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:04:13.465 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
18:04:13.493 [restartedMain] INFO  o.a.c.c.C.[Tomcat-3].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:04:13.670 [restartedMain] ERROR c.b.m.core.MybatisConfiguration - mapper[com.cows.mapper.AdminMapper.findAdminByUserName] is ignored, because it exists, maybe from xml file
18:04:14.213 [restartedMain] INFO  com.cows.service.RedisService - redis port: 6379
18:04:15.219 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8088"]
18:04:15.239 [restartedMain] INFO  com.cows.Application - Started Application in 2.642 seconds (process running for 663.2)
18:04:20.238 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:25.243 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=1, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:28.555 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - session id为：null
18:04:28.555 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request url为：http://127.0.0.1:8088/v1/products/getProductById/13
18:04:28.555 [http-nio-8088-exec-1] INFO  o.a.c.c.C.[Tomcat-3].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:04:28.563 [http-nio-8088-exec-1] INFO  c.c.c.Interceptor.MyInterceptor - ====拦截到了方法：getProductById，在该方法执行之前执行====
18:04:28.565 [http-nio-8088-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
18:04:28.619 [http-nio-8088-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@351f8ce7
18:04:28.619 [http-nio-8088-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
18:04:28.634 [http-nio-8088-exec-1] INFO  c.c.c.common.ProductController - 通过ID获取商品信息: Product(id=13, name=示例商品11, coverImage=http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164426_美大风尚标准库集成灶.jpg, detailImages=[http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164034_美大风华标准集成灶.jpg, http://127.0.0.1:8088/v1/getLatestImage?fileName=admin12_20240707164226_美大M908标准.png], description=这是一个示例商品的描述。, salePrice=99.99, costPrice=59.99, stockQuantity=100, brand=示例品牌, categoryId=4, updateTime=2024-07-14 13:36:04, createTime=2024-07-13 15:51:25, isAvailable=true, isDeleted=false)
18:04:28.639 [http-nio-8088-exec-1] INFO  c.c.c.Interceptor.MyInterceptor - 执行完方法之后进执行(Controller方法调用之后)，但是此时还没进行视图渲染
18:04:28.639 [http-nio-8088-exec-1] INFO  c.c.c.Interceptor.MyInterceptor - 整个请求都处理完咯，DispatcherServlet也渲染了对应的视图咯，此时我可以做一些清理的工作了
18:04:28.639 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request end
18:04:28.639 [http-nio-8088-exec-1] INFO  c.c.l.MyServletRequestListener - request域中保存的name值为：测试自定义事件监听器
18:04:30.249 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=2, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:35.254 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=3, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:40.262 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=4, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:45.268 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=5, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:50.271 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=6, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:04:55.275 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=7, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
18:05:00.280 [org.springframework.jms.JmsListenerEndpointContainer#0-1] ERROR o.s.j.l.DefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'activemq.queue' - retrying using FixedBackOff{interval=5000, currentAttempts=8, maxAttempts=unlimited}. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
